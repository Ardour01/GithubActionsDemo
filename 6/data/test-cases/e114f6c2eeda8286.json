{"uid":"e114f6c2eeda8286","name":"test_list_particular_user[42]","fullName":"tests.test_auth_user.TestListUsers#test_list_particular_user","historyId":"9d333fc230a2bdce03a51387857643df","time":{"start":1663924454727,"stop":1663924454962,"duration":235},"description":"\n        GET request with parameterization\n        :return:\n        ","descriptionHtml":"<pre><code>    GET request with parameterization\n    :return:\n</code></pre>\n","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Expected status code 200, but got 404.","statusTrace":"self = <tests.test_auth_user.TestListUsers object at 0x7f3160d04610>, id = 42\n\n    @pytest.mark.parametrize(\"id\", [2, 6, pytest.param(42, marks=pytest.mark.xfail)])\n    def test_list_particular_user(self, id):\n        \"\"\"\n        GET request with parameterization\n        :return:\n        \"\"\"\n        response = Request.get(f'api/users/{id}')\n>       Asserts.assert_code_status(response, 200)\n\ntests/test_auth_user.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, expected_code = 200, message = ''\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_code: int, message: str = \"\"):\n>       assert response.status_code == expected_code, \\\n            f'Expected status code {expected_code}, but got {response.status_code}. {message}'\nE       AssertionError: Expected status code 200, but got 404.\n\nsrc/asserts.py:12: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestListUsers","time":{"start":1663924454727,"stop":1663924454727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        GET request with parameterization\n        :return:\n        ","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Expected status code 200, but got 404.","statusTrace":"self = <tests.test_auth_user.TestListUsers object at 0x7f3160d04610>, id = 42\n\n    @pytest.mark.parametrize(\"id\", [2, 6, pytest.param(42, marks=pytest.mark.xfail)])\n    def test_list_particular_user(self, id):\n        \"\"\"\n        GET request with parameterization\n        :return:\n        \"\"\"\n        response = Request.get(f'api/users/{id}')\n>       Asserts.assert_code_status(response, 200)\n\ntests/test_auth_user.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, expected_code = 200, message = ''\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_code: int, message: str = \"\"):\n>       assert response.status_code == expected_code, \\\n            f'Expected status code {expected_code}, but got {response.status_code}. {message}'\nE       AssertionError: Expected status code 200, but got 404.\n\nsrc/asserts.py:12: AssertionError","steps":[{"name":"'GET' request to 'https://reqres.in/api/users/42'","time":{"start":1663924454728,"stop":1663924454728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/42'"},{"name":"data","value":"None"},{"name":"headers","value":"{'X-THIS_IS_TEST': 'True'}"},{"name":"cookies","value":"{}"},{"name":"method","value":"'GET'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"fac6035aba8f3f1f","name":"log","source":"fac6035aba8f3f1f.txt","type":"text/plain","size":1316}],"parameters":[],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestListUsers::0","time":{"start":1663924454995,"stop":1663924454996,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_auth_user"},{"name":"subSuite","value":"TestListUsers"},{"name":"host","value":"fv-az554-524"},{"name":"thread","value":"2236-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_auth_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"id","value":"42"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"e114f6c2eeda8286.json","parameterValues":["42"]}